<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">

	<beans:description>Spring安全配置</beans:description>

	<http entry-point-ref="authenticationEntryPoint">
		<!-- 不要过滤图片等静态资源 -->
		<intercept-url pattern="/**/*.jpg" filters="none" />
		<intercept-url pattern="/**/*.png" filters="none" />
		<intercept-url pattern="/**/*.gif" filters="none" />
		<intercept-url pattern="/**/*.css" filters="none" />
		<intercept-url pattern="/**/*.js" filters="none" />

		<!-- 登录页面和忘记密码页面不过滤 -->
		<intercept-url pattern="/login" filters="none" />
		<!-- <form-login login-page="/login" authentication-failure-url="/login?error=true" 
			default-target-url="/main" /> -->

		<!-- 尝试访问没有权限的页面时跳转的页面 -->
		<access-denied-handler error-page="/error/403.jsp" />

		<!-- invalidate-session=true时session会失效 -->
		<logout invalidate-session="true" logout-success-url="/login"
			logout-url="/logout" />

		<!-- 检测失效的sessionId,超时时定位到另外一个URL -->
		<session-management invalid-session-url="/error/timeout.jsp" />

		<!-- 增加一个自定义的filter，放在FILTER_SECURITY_INTERCEPTOR之前， 实现用户、角色、权限、资源的数据库管理。 -->
		<custom-filter ref="sysFilterSecurityInterceptor"
			before="FILTER_SECURITY_INTERCEPTOR" />

		<custom-filter ref="loginFilter" before="FORM_LOGIN_FILTER" />

	</http>

	<!-- 定义一个登陆的切入点 . -->
	<beans:bean id="authenticationEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<beans:property name="loginFormUrl" value="/login" />
	</beans:bean>

	<beans:bean id="loginFilter"
		class="com.dosport.springframework.security.web.authentication.SysUsernamePasswordAuthenticationFilter">
		<beans:property name="authenticationManager" ref="authenticationManager"></beans:property>
		<beans:property name="authenticationSuccessHandler"
			ref="sysAuthenticationSuccessHandler" />
		<beans:property name="authenticationFailureHandler">
			<beans:bean
				class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
				<beans:property name="defaultFailureUrl" value="/login?error=true"></beans:property>
			</beans:bean>
		</beans:property>
		<!-- <beans:property name="filterProcessesUrl" value="/login.do" /> -->
	</beans:bean>

	<!-- 一个自定义的filter，必须包含authenticationManager,accessDecisionManager,securityMetadataSource三个属性， 
		我们的所有控制将在这三个类中实现，解释详见具体配置 -->
	<beans:bean id="sysFilterSecurityInterceptor"
		class="com.dosport.springframework.security.access.intercept.SysFilterSecurityInterceptor">
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="accessDecisionManager" ref="sysAccessDecisionManagerBean" />
		<beans:property name="securityMetadataSource"
			ref="sysFilterInvocationSecurityMetadataSource" />
	</beans:bean>

	<!-- 认证管理器，实现用户认证的入口，主要实现UserDetailsService接口即可 -->
	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="sysUserDetailsService">
			<!-- 如果用户的密码采用加密的话，可以加点“盐” <password-encoder hash="md5" /> -->
			<password-encoder ref="passwordEncoder">
				<!-- 用户名做为盐值 -->
				<!-- <salt-source user-property="username" /> -->
			</password-encoder>
		</authentication-provider>
	</authentication-manager>

	<beans:bean id="sysUserDetailsService"
		class="com.dosport.springframework.security.core.userdetails.SysUserDetailsService" />

	<!-- 访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源 -->
	<beans:bean id="sysAccessDecisionManagerBean"
		class="com.dosport.springframework.security.access.SysAccessDecisionManager">
	</beans:bean>

	<!-- 资源源数据定义，即定义某一资源可以被哪些角色访问 -->
	<beans:bean id="sysFilterInvocationSecurityMetadataSource"
		class="com.dosport.springframework.security.web.access.intercept.SysFilterInvocationSecurityMetadataSource" init-method="loadResourceDefine">
		<beans:property name="remotingServiceFactory" ref="remotingServiceFactory" />
	</beans:bean>

	<beans:bean id="sysAuthenticationSuccessHandler"
		class="com.dosport.springframework.security.web.authentication.SysSavedRequestAwareAuthenticationSuccessHandler">
		<beans:property name="defaultTargetUrl" value="/main"></beans:property>
	</beans:bean>

</beans:beans>
